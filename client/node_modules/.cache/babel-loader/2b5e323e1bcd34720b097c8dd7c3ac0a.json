{"ast":null,"code":"var _jsxFileName = \"/home/gabriel/\\xC1rea de Trabalho/react/masutil/client/src/products.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport { Link } from 'react-router-dom';\nimport './App.css';\nimport Axios from \"axios\";\nimport Card from \"./components/cards/card\";\nimport Routes from \"./routes\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Product = () => {\n  _s();\n\n  const [listProducts, setListProducts] = useState();\n  useEffect(() => {\n    Axios.get(\"http://localhost:3001/getCards\").then(response => {\n      setListProducts(response.data);\n    });\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Consulta de Produtos\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 13\n    }, this), typeof listProducts !== \"undefined\" && listProducts.map(value => {\n      //gera cada card e envia as info que ele precisa pra ser montado la no card.js\n      return /*#__PURE__*/_jsxDEV(Card, {\n        listCard: listProducts,\n        setListCard: setListProducts //ATENÇÃO AQUI - O NOME DAS VARIAVÉIS TA EM PT-BR PQ É COMO ESTÁ NO BANCO DE DADOS\n        ,\n        cod: value.cod,\n        name: value.nome,\n        price_cost: value.preco_custo,\n        price_sell: value.preco_venda,\n        packaging_cost: value.custo_embalagem\n      }, value.cod, false, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 17\n      }, this);\n    }), /*#__PURE__*/_jsxDEV(Link, {\n      to: \"/\",\n      children: \"retornar a p\\xE1gina inicial\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 18,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Product, \"WhutQ9m35RUZBlJWRxUcOoNDhaA=\");\n\n_c = Product;\nexport default Product;\n\nvar _c;\n\n$RefreshReg$(_c, \"Product\");","map":{"version":3,"sources":["/home/gabriel/Área de Trabalho/react/masutil/client/src/products.js"],"names":["React","useState","useEffect","Link","Axios","Card","Routes","Product","listProducts","setListProducts","get","then","response","data","map","value","cod","nome","preco_custo","preco_venda","custo_embalagem"],"mappings":";;;AAAA,OAAOA,KAAP,IAAeC,QAAf,EAAyBC,SAAzB,QAAyC,OAAzC;AACA,SAASC,IAAT,QAAqB,kBAArB;AACA,OAAO,WAAP;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,IAAP,MAAiB,yBAAjB;AACA,OAAOC,MAAP,MAAmB,UAAnB;;;AAEA,MAAMC,OAAO,GAAG,MAAM;AAAA;;AAClB,QAAM,CAACC,YAAD,EAAeC,eAAf,IAAkCR,QAAQ,EAAhD;AAEAC,EAAAA,SAAS,CAAC,MAAM;AACZE,IAAAA,KAAK,CAACM,GAAN,CAAU,gCAAV,EAA4CC,IAA5C,CAAkDC,QAAD,IAAc;AAC7DH,MAAAA,eAAe,CAACG,QAAQ,CAACC,IAAV,CAAf;AACD,KAFD;AAGD,GAJM,EAIJ,EAJI,CAAT;AAMA,sBACI;AAAA,4BACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ,EAGK,OAAOL,YAAP,KAAwB,WAAxB,IAAuCA,YAAY,CAACM,GAAb,CAAkBC,KAAD,IAAW;AACpE;AACA,0BACI,QAAC,IAAD;AAEI,QAAA,QAAQ,EAAIP,YAFhB;AAGI,QAAA,WAAW,EAAGC,eAHlB,CAII;AAJJ;AAKI,QAAA,GAAG,EAAEM,KAAK,CAACC,GALf;AAMI,QAAA,IAAI,EAAED,KAAK,CAACE,IANhB;AAOI,QAAA,UAAU,EAAEF,KAAK,CAACG,WAPtB;AAQI,QAAA,UAAU,EAAEH,KAAK,CAACI,WARtB;AASI,QAAA,cAAc,EAAEJ,KAAK,CAACK;AAT1B,SACWL,KAAK,CAACC,GADjB;AAAA;AAAA;AAAA;AAAA,cADJ;AAaC,KAfuC,CAH5C,eAoBI,QAAC,IAAD;AAAM,MAAA,EAAE,EAAC,GAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YApBJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAwBH,CAjCD;;GAAMT,O;;KAAAA,O;AAmCN,eAAeA,OAAf","sourcesContent":["import React, {useState, useEffect} from 'react';\nimport { Link } from 'react-router-dom';\nimport './App.css';\nimport Axios from \"axios\";\nimport Card from \"./components/cards/card\";\nimport Routes from \"./routes\";\n\nconst Product = () => {\n    const [listProducts, setListProducts] = useState();\n\n    useEffect(() => {\n        Axios.get(\"http://localhost:3001/getCards\").then((response) => {\n          setListProducts(response.data);\n        });\n      }, []);\n\n    return (\n        <div>\n            <h1>Consulta de Produtos</h1>\n\n            {typeof listProducts !== \"undefined\" && listProducts.map((value) => {\n            //gera cada card e envia as info que ele precisa pra ser montado la no card.js\n            return (  \n                <Card \n                    key = {value.cod} \n                    listCard = {listProducts} \n                    setListCard= {setListProducts}\n                    //ATENÇÃO AQUI - O NOME DAS VARIAVÉIS TA EM PT-BR PQ É COMO ESTÁ NO BANCO DE DADOS\n                    cod={value.cod}\n                    name={value.nome}\n                    price_cost={value.preco_custo}\n                    price_sell={value.preco_venda}\n                    packaging_cost={value.custo_embalagem}\n                ></Card>\n                );\n            })}\n\n            <Link to=\"/\">retornar a página inicial</Link>\n        </div>\n    );\n}\n\nexport default Product;"]},"metadata":{},"sourceType":"module"}